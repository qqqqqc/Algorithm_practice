# 放苹果问题
# 描述
# 题目描述
#
# 把m个同样的苹果放在n个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法。
#
# 数据范围：0<=m<=10，1<=n<=10。
# 本题含有多组样例输入。
#
#
# 输入描述：
# 输入两个int整数
#
# 输出描述：
# 输出结果，int型
#
# 示例1
# 输入：
# 7 3
# 输出：
# 8
# 下面是分析
# m 是苹果的数量 n 是盘子的数量 即 f(m,n)
# 大的情况分为两种
# 1.盘子的数量大于苹果的数量  n > M
# 2.苹果的数量大于等于盘子的数量  m >= n
# 对于第一种情况也就是说多余的盘子并不会对结果产生什么影响 即 f(m,n) = (m,m)
# 对于第二种情况再分为两种情况(盘子中是否有苹果)
# ①所有的盘子中都有苹果,相当于可以从每个盘子中拿掉一个苹果，不影响不同放法的数目 即 f(m,n) = f(m-n,n)
# ②当含有0的结果时，也就是说至少有一个盘子是空的 等价于 f(m,n)  = f(m,n-1)


# 初始化二维数组  范围是数据范围：0<=m<=10，1<=n<=10。
dp = [[0 for i in range(11)] for j in range(11)]

# 边界值判断
for i in range(11):
    dp[0][i] = dp[i][1] = 1

for i in range(1,11):
    for j in range(1,11):
        if j > i:
            dp[i][j] = dp[i][i]
        else:
            dp[i][j] = dp[i][j-1] + dp[i-j][j]

# 当m=7 n=3  结果为8

# print(dp[7][3])


# 当然这道题还可以用递归来做

def solution(m,n):
    if m == 0 or n == 1:
        return 1
    if n > m:
        return solution(m,m)
    else:
        return solution(m,n-1) + solution(m-n,n)

# 测试 当m=7 n=3
print(solution(7,3))